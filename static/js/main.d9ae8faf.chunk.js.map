{"version":3,"sources":["context.js","componants/layouts/TextInputGroup.js","componants/contacts/editcontact.js","componants/contacts/Contact.js","componants/contacts/Contacts.js","componants/layouts/Header.js","componants/contacts/AddContact.js","componants/pages/about.js","componants/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","id","payload","map","contact","Provider","name","email","phone","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","TextInputGroup","label","placeholder","onChange","errors","className","htmlFor","style","float","classnames","propsType","PropTypes","string","isRequired","func","defaultProps","EditContact","error","e","target","onSubmit","a","preventDefault","updateContact","match","params","put","history","push","bind","Contact","showContactInfo","onShowClick","onDeleteClick","delete","onClick","cursor","color","to","marginRight","Contacts","console","log","Fragment","key","Header","href","banding","AddContact","newContact","post","App","exact","path","component","About","EditContacts","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d9ae8faf.chunk.js","sourcesContent":["import React, {Component}  from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer =  (state,action) => {\r\n    switch(action.type)\r\n    {\r\n        case 'DELETE_CONTACT' :\r\n            return {\r\n                ...state, \r\n                contacts : state.contacts.filter(contacts =>\r\n                    contacts.id !== action.payload)\r\n            }\r\n         case 'ADD_CONTACT' :\r\n            return {\r\n                ...state, \r\n               contacts :  [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT' :\r\n            return {\r\n                ...state, \r\n               contacts : state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) :contact )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts : [\r\n            {\r\n                id : 1,\r\n                name : 'Shuvendu',\r\n                email : 'shuvenduoffline@gmail.com',\r\n                phone : '123456789'\r\n            },\r\n            {\r\n                id : 2,\r\n                name : 'Amit',\r\n                email : 'amit@gmail.com',\r\n                phone : '123456789'\r\n            },\r\n            {\r\n                id : 3,\r\n                name : 'Amitava',\r\n                email : 'matava@gmail.com',\r\n                phone : '123456789'\r\n            }\r\n         ] ,\r\n         dispatch : action =>this.setState(state => reducer(state, action))\r\n\r\n    }\r\n\r\n\r\n    //fethcing the data from fake rest api...\r\n   async componentDidMount(){\r\n       const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n       \r\n        this.setState({\r\n            contacts : res.data\r\n        });\r\n       \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\nlabel,\r\nname,\r\nvalue,\r\nplaceholder,\r\ntype,\r\nonChange,\r\nerrors\r\n}) =>{\r\n    return  ( <div className=\"form-group\">\r\n    <label htmlFor={name} style={ {float : \"left\"}}>{label}</label>\r\n    <input \r\n    name={name}\r\n    type={type}\r\n    value={value}\r\n    onChange={onChange}\r\n    className={classnames('form-control form-control-lg',{\r\n        'is-invalid' : errors\r\n    })}\r\n    placeholder={placeholder}/>\r\n    {errors &&  <div className=\"invalid-feedback\">{errors}</div> }\r\n   \r\n    </div>\r\n    );\r\n      \r\n};\r\n\r\nTextInputGroup.propsType = {\r\n    label : PropTypes.string.isRequired,\r\n    name : PropTypes.string.isRequired,\r\n    placeholder : PropTypes.string.isRequired,\r\n    value : PropTypes.string.isRequired,\r\n    type : PropTypes.string.isRequired,\r\n    onChange : PropTypes.func.isRequired,\r\n    errors : PropTypes.string.isRequired,\r\n} \r\n\r\nTextInputGroup.defaultProps = {\r\n    type : 'text'\r\n}\r\n\r\n\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name : '',\r\n        email : '',\r\n        phone :'',\r\n         error : {}\r\n    }\r\n    // [\r\n    \r\n    //  ] \r\n    //get the data and update input filed\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name : contact.name,\r\n            email : contact.email,\r\n            phone : contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name] : e.target.value });\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const { name , email, phone} = this.state;\r\n\r\n\r\n        // Check for Erros\r\n        if(name === ''){\r\n            this.setState({\r\n                error : {\r\n                    name : \"Name is required!!\"\r\n                }\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({\r\n                error : {\r\n                    email : \"Email is required!!\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({\r\n                error : {\r\n                    phone : \"Phone Number is required!!\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n//make request to backend\r\nconst { id } = this.props.match.params;\r\nconst res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updateContact);\r\ndispatch({\r\n    type : 'UPDATE_CONTACT',\r\n    payload : res.data\r\n});\r\n        \r\n        //clear state\r\n        this.setState({\r\n            name : '',\r\n            email:'',\r\n            phone:'',\r\n            error : {}\r\n        });\r\n\r\n        //Redirect\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {name , email , phone, error} = this.state;\r\n        return (\r\n            <Consumer>\r\n            {\r\n                value => {\r\n                    const { dispatch } = value; \r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header float-left\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                <TextInputGroup\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                onChange = {this.onChange}\r\n                                errors = {error.name}\r\n                                />\r\n\r\n\r\n                    <TextInputGroup\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={email}\r\n                                onChange = {this.onChange}\r\n                                errors = {error.email}\r\n                                />\r\n\r\n                    <TextInputGroup\r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter phone number\"\r\n                                value={phone}\r\n                                onChange = {this.onChange}\r\n                                errors = {error.phone}\r\n                                />\r\n        \r\n                \r\n        \r\n                                <input type=\"submit\" value=\"Edit Contact\"\r\n                                className=\"btn btn-light btn-block\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }\r\n            }    \r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default EditContact;\r\n","import React, {\r\n    Component\r\n} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../context';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo : false\r\n    };\r\n    onShowClick = e =>{\r\n        this.setState({showContactInfo : ! this.state.showContactInfo});\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n\r\n        // delete contact from users\r\n        try{\r\n     await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n     dispatch({ type : 'DELETE_CONTACT',\r\n     payload : id})\r\n        }catch(e){\r\n\r\n            dispatch({ type : 'DELETE_CONTACT',\r\n            payload : id})\r\n        }\r\n\r\n     \r\n    }\r\n    render() {\r\n        const {id, name, email , phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return ( \r\n\r\n            <Consumer>\r\n                {value => {\r\n\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4 className=\"text-left\">{name} <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{ cursor : 'pointer'}}></i>\r\n                        <i className=\"fas fa-times\" style={{ cursor : 'pointer' , float: 'right' , color: 'red'}} \r\n                        onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                        <Link to={`contact/edit/${id}`}>\r\n                            <i \r\n                            className=\"fas fa-pencil-alt\"\r\n                            style={{cursor : 'pointer',\r\n                            float : 'right',\r\n                           color:'black',\r\n                           marginRight: '1rem' }}></i>\r\n                        </Link>\r\n                        </h4> \r\n                       { showContactInfo ? ( <ul className=\"list-group\">\r\n                        <li className=\"list-group-item text-left\"> Email : {email} </li> \r\n                        <li className=\"list-group-item text-left\"> Phone : {phone} </li> \r\n                        </ul> ):null\r\n                       }\r\n                    </div>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n       \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context'\r\nclass Contacts extends Component {\r\n \r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>{\r\n                  \r\n                    const { contacts } = value;\r\n                    console.log(contacts);\r\n                    return  (\r\n            <React.Fragment>\r\n                <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                {\r\n                contacts.map(contact =>\r\n                    (\r\n                   <Contact key = {contact.id} contact = {contact}/>\r\n                ))\r\n                }\r\n            </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {props.banding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                              <i className=\"fas fa-home\"/> Home\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"/> ADD\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"/> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\nHeader.defaultProps = {\r\n    banding : 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    banding : PropTypes.string.isRequired\r\n  };\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name : '',\r\n        email : '',\r\n        phone :'',\r\n         error : {}\r\n    }\r\n    // [\r\n    \r\n    //  ] \r\n    onChange = e => this.setState({ [e.target.name] : e.target.value });\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const { name , email, phone} = this.state;\r\n\r\n\r\n        // Check for Erros\r\n        if(name === ''){\r\n            this.setState({\r\n                error : {\r\n                    name : \"Name is required!!\"\r\n                }\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({\r\n                error : {\r\n                    email : \"Email is required!!\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({\r\n                error : {\r\n                    phone : \"Phone Number is required!!\"\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        //add contact...\r\n       const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n    \r\n        dispatch({type : 'ADD_CONTACT' , payload : res.data});\r\n\r\n        \r\n        this.setState({\r\n            name : '',\r\n            email:'',\r\n            phone:'',\r\n            error : {}\r\n        });\r\n\r\n        //Redirect\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {name , email , phone, error} = this.state;\r\n        return (\r\n            <Consumer>\r\n            {\r\n                value => {\r\n                    const { dispatch } = value; \r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header float-left\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                <TextInputGroup\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                onChange = {this.onChange}\r\n                                errors = {error.name}\r\n                                />\r\n\r\n\r\n                    <TextInputGroup\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={email}\r\n                                onChange = {this.onChange}\r\n                                errors = {error.email}\r\n                                />\r\n\r\n                    <TextInputGroup\r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter phone number\"\r\n                                value={phone}\r\n                                onChange = {this.onChange}\r\n                                errors = {error.phone}\r\n                                />\r\n        \r\n                \r\n        \r\n                                <input type=\"submit\" value=\"Add Contact\"\r\n                                className=\"btn btn-light btn-block\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }\r\n            }    \r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default AddContact;\r\n","import React  from 'react'\r\n\r\nexport default () => {\r\n \r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">About Contact Manager</h1>\r\n                <p className=\"lead\">Simple app to manage contacts</p>\r\n                <p className=\"text-secondary\">Version 1.0.0</p>\r\n            </div>\r\n        )\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport './App.css';\n\nimport { Provider } from './context';\nimport EditContacts from './componants/contacts/editcontact';\n\nimport Contacts from './componants/contacts/Contacts';\nimport Header from './componants/layouts/Header';\nimport AddContact from './componants/contacts/AddContact';\nimport About from './componants/pages/about';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NotFound from './componants/pages/NotFound';\n\nfunction App() {\n  return ( \n  <Provider>\n    <Router>\n  <div className = \"App\">\n     <Header banding=\"Contact Manager\"/>\n     <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\" component={Contacts}/>\n        <Route exact path=\"/about\" component={About}/>\n        <Route exact path=\"/contact/add\" component={AddContact}/>\n        <Route exact path=\"/contact/edit/:id\" component={EditContacts}/>\n        <Route component={NotFound}/>\n      </Switch>\n    </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}